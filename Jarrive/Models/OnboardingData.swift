//
//  OnboardingData.swift
//  Jarrive
//
//  Created by Felipe Girardi on 12/10/23.
//

import Foundation

struct OnboardingData: Equatable {
  static func == (lhs: OnboardingData, rhs: OnboardingData) -> Bool {
    return lhs.catChatMessages == rhs.catChatMessages
  }
  
  var catChatMessages = [
    BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Salut? Quis est la?", translation: "Oi? Quem √©?")], type: .cat)),
    BubbleContent.option(OptionBubble(textArray: [BubbleString(text: "Bonjour", translation: "Bom dia"),  BubbleString(text: "‚òÄÔ∏è ou ", translation: nil), BubbleString(text: "bonsoir", translation: "Boa noite"), BubbleString(text: "üåô ?", translation: nil)], options: ["Bonjour", "Bonsoir"])),
//    User message - option choice
    BubbleContent.response(nil),
    BubbleContent.text(nil),
    BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Je m'appelle", translation: "Eu me chamo"), BubbleString(text: "Thomas, e voc√™?", translation: nil)], type: .cat)),
//    User message - text
    BubbleContent.text(nil),
    BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Enchant√©!", translation: "Encantado"), BubbleString(text: " üòΩüòΩ", translation: nil)], type: .cat)),
    BubbleContent.option(OptionBubble(textArray: [BubbleString(text: "Human", translation: "Humano"),  BubbleString(text: " ou ", translation: nil), BubbleString(text: "chat", translation: "gato"), BubbleString(text: "?", translation: nil)], options: ["Human üññ", "Chat üò∫"])),
//    User message - option choice
    BubbleContent.response(nil),
    BubbleContent.audio(AudioBubble(audio: "")),
//    User message - text
    BubbleContent.text(nil),
    BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Voc√™ n√£o entendeu?\n", translation: nil), BubbleString(text: "Alors", translation: "Ent√£o"), BubbleString(text: ", je suis un chat, mas voc√™ n√£o üòë", translation: nil)], type: .cat)),
    BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Al√©m de chat, ", translation: nil), BubbleString(text: "je suis", translation: "eu sou"), BubbleString(text: " carteiro e preciso entregar isso aqui, me ajuda?", translation: nil)], type: .cat)),
    BubbleContent.image(ImageBubble(image: "CatPostcard")),
    BubbleContent.option(OptionBubble(textArray: [BubbleString(text: "Voc√™ sabe o que √© isso?", translation: nil)], options: ["Train üöÇ", "Croissant ü•ê", "Carte Postale ‚úâÔ∏è"])),
//    User message - option choice
    BubbleContent.response(nil),
    BubbleContent.text(nil),
    BubbleContent.option(OptionBubble(textArray: [BubbleString(text: "Vamos ler o que est√° escrito?", translation: nil)], options: ["Oui üëç", "Non üëé"])),
//    User message - option choice
    BubbleContent.response(nil),
    BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Je suis ", translation: nil), BubbleString(text: "curieux", translation: "curioso"), BubbleString(text: "! üòπ", translation: nil)], type: .cat))
  ]
  let pauseMessageFluxIndexes = [1, 4, 7, 9, 14, 17]
  let userTextFieldPauseIndexes = [4, 9]
  let optionPauseIndexes = [1, 7, 14, 17]
  let variableOptionMessageIndexes = [1, 14]
  let variableOptionFollowingMessages = [[BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Bonjour, allors!", translation: "Bom dia, ent√£o!")], type: .cat)), BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Bonsoir, allors!", translation: "Boa noite, ent√£o!")], type: .cat))], [BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Non...", translation: "N√£o..."), BubbleString(text: "C'est une carte postale.", translation: "√â um cart√£o postal.")], type: .cat)), BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Non...", translation: "N√£o..."), BubbleString(text: "C'est une carte postale.", translation: "√â um cart√£o postal.")], type: .cat)), BubbleContent.text(TextBubble(textArray: [BubbleString(text: "Tr√®s bien!", translation: "Muito bem!"), BubbleString(text: "Une carte postale.", translation: "Um cart√£o postal.")], type: .cat))]]
  
  var postcardData = PostcardData(author: "Thierry", image: "CatPicture", text: "Bonjour!\nJe m‚Äôappelle Charlotte, je suis grande:\nune fille de cinq ans!\n\nJe t‚Äôaime.\nBisous", translation: "Bom dia! Eu me chamo Charlotte, eu sou grande: uma menina de cinco anos!\n\nEu te amo.\nBeijos", stamps: [StampData(group: "verbes reguliers", number: 1, title: "√ätre"), StampData(group: "verbes irreguliers", number: 2, title: "Appeler"), StampData(group: "substantivos", number: 1, title: "Pessoas"), StampData(group: "n√∫meros", number: 1, title: "1 a 10")])
}
